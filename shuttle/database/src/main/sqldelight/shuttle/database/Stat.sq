import shuttle.database.model.DatabaseAppId;
import shuttle.database.model.DatabaseDate;
import shuttle.database.model.DatabaseGeoHash;
import shuttle.database.model.DatabaseTime;

CREATE TABLE IF NOT EXISTS stat (
    appId TEXT AS DatabaseAppId NOT NULL,
    geoHash TEXT AS DatabaseGeoHash,
    date INTEGER AS DatabaseDate NOT NULL,
    time INTEGER AS DatabaseTime NOT NULL,

    PRIMARY KEY (appId, geoHash, date, time)
);

insertStat:
    INSERT OR IGNORE INTO stat(appId, geoHash, date, time)
    VALUES (?, ?, ?, ?);

deleteStatsForApp:
    DELETE FROM stat
    WHERE appId = ?;

findAllStats:
    SELECT * FROM stat
    WHERE (stat.time >= :startTime AND stat.time <= :endTime);

findAllStatsByGeoHash:
    SELECT * FROM stat
    WHERE (stat.time >= :startTime AND stat.time <= :endTime)
    OR geoHash = :geoHash;

findAllStatsFromLocationAndTimeTables:
        SELECT
            locationStat.appId AS appIdByLocation,
            locationStat.geoHash AS location,
            NULL AS appIdByTime,
            NULL AS time
        FROM locationStat
    UNION ALL
        SELECT
            NULL AS appIdByLocation,
            NULL AS location,
            timeStat.appId AS appIdByTime,
            timeStat.time AS time
        FROM timeStat;

clearAllStatsOlderThan:
    DELETE FROM stat WHERE date < ?;

clearAllStatsFromLocationTable:
   DELETE FROM locationStat;

clearAllStatsFromTimeTable:
   DELETE FROM timeStat;
